{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/dashboard-api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {DashboardApiService} from '../dashboard-api.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n  isLoading : boolean = false;\n  countryList : any = [];\n  stateList : any = [];\n  cityList : any = [];\n  selectedCountry : string = '';\n\n  constructor(private api : DashboardApiService, private fb: FormBuilder) {\n    this.registerForm = this.fb.group({\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      address1: ['', [Validators.required]],\n      address2: ['', [Validators.required]],\n      country: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.listCountries();\n  }\n\n  listCountries(){\n    this.api.listCountries().subscribe((response) => {\n      this.countryList = response;\n      this.registerForm.controls['state'].setValue(\"\");\n      this.registerForm.controls['city'].setValue(\"\");\n      this.stateList = [];\n      this.cityList = [];\n    },(error) => {\n      console.log(error);\n    })\n  }\n\n  onCountryChange(event){\n    let params = {\n      \"country_code\" : event.target.value\n    };\n    this.selectedCountry = event.target.value;\n    this.api.listStates(params).subscribe((response) => {\n      this.stateList = response;\n      this.registerForm.controls['state'].setValue(\"\");\n      this.registerForm.controls['city'].setValue(\"\");\n      this.cityList = [];\n    },(error) => {\n      console.log(error);\n    })\n  }\n\n  onStateChange(event){\n    let params = {\n      \"country_code\" : this.selectedCountry,\n      \"state_code\": event.target.value\n    };\n\n    this.api.listCities(params).subscribe((response) => {\n      this.cityList = response;\n      this.registerForm.controls['city'].setValue(\"\");\n    },(error) => {\n      console.log(error);\n    })\n  }\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onRegister(){\n    this.submitted = true;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    const { first_name, last_name ,email, address1, address2, country, state, city } = this.registerForm.value;\n    const params = {\n      first_name,\n      last_name,\n      email,\n      address1,\n      address2,\n      country,\n      state,\n      city\n    }\n    this.isLoading = true;\n    this.api.register(params).subscribe((response :any) => {\n      console.log(response);\n      this.isLoading = false;\n      alert(response.message);\n\n    },(error) => {\n      console.log(error);\n    })\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"main\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\">\n      <h4 class=\"m-bottom\">Create a new Account</h4>\n      <div class=\"colum m-bottom\">\n        <div>\n          <label>First Name :</label>\n          <input type=\"text\" placeholder=\"Enter first name\" [ngClass]=\"{ 'invalid-input': submitted && f.first_name.errors }\" required formControlName=\"first_name\" />\n          <div *ngIf=\"submitted && f.first_name.errors\" style=\"width: 100%\">\n            <span *ngIf=\"f.first_name.errors.required\" class=\"invalid-msg\">Please enter your first name</span>\n          </div>\n        </div>\n        <div>\n          <label>Last Name :</label>\n          <input type=\"text\" placeholder=\"Enter last name\"  [ngClass]=\"{ 'invalid-input': submitted && f.last_name.errors }\" required formControlName=\"last_name\" />\n          <div *ngIf=\"submitted && f.last_name.errors\" style=\"width: 100%\">\n            <span *ngIf=\"f.last_name.errors.required\" class=\"invalid-msg\">Please enter your last name</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"m-bottom\">\n        <label>Email ID :</label>\n        <input type=\"text\" placeholder=\"Enter email id\" class=\"full-input\" required formControlName=\"email\" [ngClass]=\"{ 'invalid-input': submitted && f.email.errors }\" />\n        <div *ngIf=\"submitted && f.email.errors\">\n          <div *ngIf=\"f.email.errors.required\" class=\"invalid-msg\">Please enter your e-mail address</div>\n          <div *ngIf=\"f.email.errors.email\" class=\"invalid-msg\">Please enter a valid email address</div>\n        </div>\n      </div>\n      <h6>Address</h6>\n      <div class=\"colum m-bottom\">\n        <div>\n          <label>Address 1</label>\n          <input type=\"text\" placeholder=\"Enter address 1\" [ngClass]=\"{ 'invalid-input': submitted && f.address1.errors }\" required formControlName=\"address1\" />\n          <div *ngIf=\"submitted && f.address1.errors\" style=\"width: 100%\">\n            <span *ngIf=\"f.address1.errors.required\" class=\"invalid-msg\">Please enter your address 1</span>\n          </div>\n        </div>\n        <div>\n          <label>Address 2</label>\n          <input type=\"text\" placeholder=\"Enter address 1\" [ngClass]=\"{ 'invalid-input': submitted && f.address2.errors }\" required formControlName=\"address2\" />\n          <div *ngIf=\"submitted && f.address2.errors\" style=\"width: 100%\">\n            <span *ngIf=\"f.address2.errors.required\" class=\"invalid-msg\">Please enter your address 2</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"m-bottom\">\n        <label>Country :</label>\n        <select class=\"full-input\" (change)=\"onCountryChange($event)\" required formControlName=\"country\" [ngClass]=\"{ 'invalid-input': submitted && f.country.errors }\">\n          <option value=\"\" disabled>Please select any country</option>\n          <option *ngFor=\"let country of countryList\" [value]=\"country.code\">{{country.name}}</option>\n        </select>\n        <div *ngIf=\"submitted && f.country.errors\" style=\"width: 100%\">\n          <span *ngIf=\"f.country.errors.required\" class=\"invalid-msg\">Please select your country</span>\n        </div>\n      </div>\n      <div class=\"m-bottom\">\n        <label>State :</label>\n        <select class=\"full-input\" (change)=\"onStateChange($event)\" formControlName=\"state\" [ngClass]=\"{ 'invalid-input': submitted && f.state.errors }\">\n          <option  value=\"\" disabled>Please select any state</option>\n          <option *ngFor=\"let state of stateList\" [value]=\"state.state_code\">{{state.name}}</option>\n        </select>\n        <div *ngIf=\"submitted && f.state.errors\" style=\"width: 100%\">\n          <span *ngIf=\"f.state.errors.required\" class=\"invalid-msg\">Please select your state</span>\n        </div>\n      </div>\n      <div class=\"m-bottom\">\n        <label>City :</label>\n        <select class=\"full-input\" formControlName=\"city\" [ngClass]=\"{ 'invalid-input': submitted && f.city.errors }\">\n          <option value=\"\" disabled>Please select any city</option>\n          <option *ngFor=\"let city of cityList\" [value]=\"city.name\">{{city.name}}</option>\n        </select>\n        <div *ngIf=\"submitted && f.city.errors\" style=\"width: 100%\">\n          <span *ngIf=\"f.city.errors.required\" class=\"invalid-msg\">Please select your city</span>\n        </div>\n      </div>\n      <div class=\"align-btn\">\n        <button type=\"submit\" [ngClass]=\"{'disable' : isLoading}\">{{ isLoading ? 'Creating Account' : 'Create Account'}}</button>\n      </div>\n    </form>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  title = 'appBootstrap';\n\n  closeResult: string;\n\n  constructor(private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n\n}\n","<p>home works!</p>\n\n<button [routerLink]=\"['/']\">Go to Login Page</button>\n<button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(mymodal)\">Open My Modal</button>\n\n<ng-template #mymodal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Bootstrap Modal</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    This is example from ItSolutionStuff.com\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Ok</button>\n  </div>\n</ng-template>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardApiService {\n\n  basePath : string = \"https://reqres.in/api/\";\n  apiPath : string = \"https://concord-test.herokuapp.com/api/\";\n\n  constructor(private http : HttpClient) { }\n\n  listOfUsers(){\n    const url : string = this.basePath + \"users?page=2\";\n    return this.http.get(url);\n  }\n\n  createUser(data){\n    const url : string = this.basePath + 'users';\n    return this.http.post(url, data);\n  }\n\n  listCountries(){\n    const url : string = this.apiPath + \"countries\";\n    return this.http.get(url);\n  }\n\n  listStates(data){\n    const url : string = this.apiPath + 'states';\n    return this.http.post(url, data);\n  }\n\n  listCities(data){\n    const url : string = this.apiPath + 'cities';\n    return this.http.post(url, data);\n  }\n\n  register(data){\n    const url : string = this.apiPath + 'register';\n    return this.http.post(url, data);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'dashboard';\n  studentList = [\n    {\n      firstName : 'Mr.A',\n      lastName: 'sdf',\n      score : 30\n    },\n    {\n      firstName : 'Mr.b',\n      lastName: 'ewr',\n      score : 25\n    },\n    {\n      firstName : 'Mr.c',\n      lastName: 'yt',\n      score : 70\n    },\n    {\n      firstName : 'Mr.d',\n      lastName: 'rt',\n      score : 90\n    },\n    {\n      firstName : 'Mr.e',\n      lastName: 'try',\n      score : 30\n    }\n  ];\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardApiService } from './dashboard-api.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule\n  ],\n  providers: [DashboardApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>The page you are looking is not Found</h1>\n<a [routerLink]=\"['/']\">Go back to Login Page</a>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {\n    path : '', component : RegisterComponent\n  },\n  {\n    path : 'login', component : LoginComponent\n  },\n  {\n    path : 'home', component : HomeComponent\n  },\n  {\n    path: '**', component : PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardApiService } from '../dashboard-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  message : string = \"Welcome Thiru!\";\n  accountNo : number = 457869522;\n  isValid : boolean = true;\n  isPass : any;\n\n  color : string = 'red';\n\n  isActive : boolean = true;\n\n  login : any = {\n    name : '',\n    job : ''\n  }\n\n  loading : boolean = true;\n\n  userList : any = [];\n\n  constructor(private api : DashboardApiService, private router : Router) { }\n\n  ngOnInit(): void {\n    this.onLoadUserList();\n  }\n\n  onLoadUserList(){\n    this.loading = false;\n    this.api.listOfUsers().subscribe((response : any) => {\n      this.loading = true;\n        console.log(response.data)\n        this.userList = response.data;\n      // this.userList = [];\n    }, (err) => {\n      console.log(err)\n    })\n  }\n\n  onClickButton(){\n    this.loading = false;\n    this.api.createUser(this.login).subscribe((response) => {\n      this.loading = true;\n      console.log(response)\n      this.router.navigateByUrl('/register');\n    }, (err) => {\n      this.loading = true;\n      console.log(err)\n    })\n  }\n\n}\n","<div>\n  <h1>Welcome to Login Page</h1>\n\n  <button [routerLink]=\"['/home']\">Go To Home Page</button>\n\n  <h1 [style.color]=\"color\">{{message}}</h1>\n  <h1 [class.success]=\"isActive\">{{accountNo}}</h1>\n  <form>\n    <input type=\"text\" placeholder=\"enter name\" [(ngModel)]=\"login.name\" [ngModelOptions]=\"{standalone: true}\"/>\n    <input type=\"password\" placeholder=\"enter job\" [(ngModel)]=\"login.job\" [ngModelOptions]=\"{standalone: true}\"/>\n  </form>\n  <button *ngIf=\"loading\" (click)=\"onClickButton()\">Click Me</button>\n\n  <button *ngIf=\"!loading\">Loading...</button>\n</div>\n<div>\n  <table id=\"customers\" *ngIf=\"loading\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n        <th>Image</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of userList\">\n          <td>{{user.id}}</td>\n          <td>{{user.first_name}}</td>\n          <td>{{user.last_name}}</td>\n          <td>{{user.email}}</td>\n          <td>\n            <img src=\"{{user.avatar}}\" style=\"width: 30px;\" />\n          </td>\n        </tr>\n        <tr *ngIf=\"userList.length == 0\">\n          <td colspan=\"5\">No User Found</td>\n        </tr>\n    </tbody>\n  </table>\n  <div *ngIf=\"!loading\">\n    <h1>DATA IS LOADING....</h1>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}